name: Build and Deploy to ACR

on:
  push:
    branches:
      - main  # or the branch you want to trigger the pipeline on

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry (ACR)
        run: |
          echo "${{ secrets.DOMAIN_ACR_PASSWORD }}" | docker login ${{ env.DOMAIN_ACR_NAME }} -u ${{ secrets.DOMAIN_ACR_USERNAME }} --password-stdin

      - name: Get Commit SHA
        id: get_commit_sha
        run: echo "COMMIT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

        - name: Build Docker images with BuildKit
        run: |
          DOCKER_BUILDKIT=1 docker compose build --build-arg BUILDKIT_INLINE_CACHE=1
          for IMAGE in $(docker compose config | awk '/image:/ {print $2}'); do
            IMAGE_NAME=${IMAGE/:latest/}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ env.COMMIT_SHA }}
          done

      - name: Push Docker Images to ACR
        run: |
          for IMAGE in $(docker compose config | awk '/image:/ {print $2}'); do
            IMAGE_NAME=${IMAGE/:latest/}
            docker push $IMAGE_NAME:${{ env.COMMIT_SHA }}
          done

      - name: Logout from ACR
        run: docker logout ${{ env.ACR_NAME }}


      - name: Update Kubernetes Manifests with New Image Tags
        run: |
          for FILE in ${K8S_MANIFESTS_DIR}/*.yaml; do
            sed -i "s|\(image: [^:]*\)|\1:${{ env.COMMIT_SHA }}|g" "$FILE"
          done
          echo "âœ… The following Kubernetes manifests have been updated with COMMIT_SHA:"
          grep -H "image:" ${K8S_MANIFESTS_DIR}/*.yaml

      - name: Push Kubernetes Manifests to Git (if using GitOps or Argo CD)
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ${K8S_MANIFESTS_DIR}/*.yaml
          git commit -m "Update image tags to ${COMMIT_SHA}"
          git push origin ${GITHUB_REF}
  