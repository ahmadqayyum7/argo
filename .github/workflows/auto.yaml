name: Build and Deploy to ACR

on:
  push:
    branches:
      - main

env:
  K8S_MANIFESTS_DIR: k8s-manifest  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry (ACR)
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_NAME }}.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin
  
      - name: Build and Push Docker Image with Unique Tag
        run: |
          VERSION=$(date +%Y%m%d%H%M%S)
          IMAGE_NAME="${{ secrets.ACR_NAME }}.azurecr.io/my-image:$VERSION"

          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

          # Tag as latest (optional)
          docker tag $IMAGE_NAME "${{ secrets.ACR_NAME }}.azurecr.io/my-image:latest"
          docker push "${{ secrets.ACR_NAME }}.azurecr.io/my-image:latest"

          echo "IMAGE_TAG=$VERSION" >> $GITHUB_ENV

      - name: Logout from ACR
        run: docker logout ${{ secrets.ACR_NAME }}.azurecr.io

  Deploy-to-AKS:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        run: |
          az login --service-principal \
            -u "${{ secrets.AZURE_CLIENT_ID }}" \
            -p "${{ secrets.AZURE_CLIENT_SECRET }}" \
            --tenant "${{ secrets.AZURE_TENANT_ID }}"

      - name: Set Azure Subscription
        run: az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: ACR Login
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Update Image Tag in Kubernetes Manifests
        run: |
          sed -i "s|image: testrepo3.azurecr.io/my-image:[^ ]*|image: testrepo3.azurecr.io/my-image:$IMAGE_TAG|" ${K8S_MANIFESTS_DIR}/react-app-deployment.yaml

      - name: Debug Kubernetes Manifest
        run: cat ${K8S_MANIFESTS_DIR}/react-app-deployment.yaml  # Debugging Step

      - name: Deploy Kubernetes Manifests
        run: |
          echo "ðŸš€ Applying Kubernetes manifests to AKS..."
          kubectl apply -f ${K8S_MANIFESTS_DIR}/react-app-deployment.yaml

      - name: Verify Deployment
        run: kubectl get pods -n argos
