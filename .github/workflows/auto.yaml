name: Build and Deploy to ACR

on:
  push:
    branches:
      - main  # or the branch you want to trigger the pipeline on

env:
  K8S_MANIFESTS_DIR: k8s-manifest  

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry (ACR)
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_NAME }}.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin
          
      - name: Get Commit SHA
        id: get_commit_sha
        run: echo "COMMIT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV
          
      - name: Build and Tag Docker Image
        run: |
          IMAGE_NAME="${{ secrets.ACR_NAME }}.azurecr.io/my-image"
          docker build -t $IMAGE_NAME:latest .
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ env.COMMIT_SHA }}
          
      - name: Push Docker Image to ACR
        run: |
          IMAGE_NAME="${{ secrets.ACR_NAME }}.azurecr.io/my-image"
          docker push $IMAGE_NAME:${{ env.COMMIT_SHA }}
     
      - name: Logout from ACR
        run: docker logout ${{ secrets.ACR_NAME }}.azurecr.io

  update-argo-manifests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout argo-cd repository
        uses: actions/checkout@v4
        with:
          repository: ahmadqayyum7/argo-cd  # Your Argo CD repo
          token: ${{ secrets.GH_TOKEN }}  # GitHub token for authentication
          path: argo-cd

      - name: Log in to Azure
        run: |
          az login --service-principal \
            -u "${{ secrets.AZURE_CLIENT_ID }}" \
            -p "${{ secrets.AZURE_CLIENT_SECRET }}" \
            --tenant "${{ secrets.AZURE_TENANT_ID }}"

      - name: Set Azure Subscription
        run: az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Update Kubernetes Manifests with New Image Tags
        run: |
          cd argo-cd
          for FILE in *.yaml; do
            sed -i 's|\(image: .*/my-image\).*|\1:'"${{ env.COMMIT_SHA }}"'|g' "$FILE"
          done
          echo "âœ… Updated Kubernetes manifests with new image tag:"
          grep -H "image:" *.yaml  # Check updated files in the root

      - name: Check if changes are detected
        run: |
          cd argo-cd
          git status  # Check if the files are modified
          git diff    # Show the difference in the files

      - name: Commit the updated Kubernetes manifests
        run: |
          cd argo-cd
          git config --global user.name "ahmadqayyum7"
          git config --global user.email "ahmadqayyum19@gmail.com"
          git add *.yaml
          git commit -m "Update Kubernetes manifests with new image tag ${COMMIT_SHA}"
          
          # Pull the latest changes to prevent conflicts
          git pull --rebase origin main
          
          # Push the changes
          git push origin main
