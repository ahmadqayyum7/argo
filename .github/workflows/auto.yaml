name: Build and Deploy to ACR

on:
  push:
    branches:
      - main  # or the branch you want to trigger the pipeline on

env:
  K8S_MANIFESTS_DIR: k8s-manifest  

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry (ACR)
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_NAME }}.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin
          
      - name: Get Commit SHA
        id: get_commit_sha
        run: echo "COMMIT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV
  
      - name: Build and Tag Docker Image
        run: |
          IMAGE_NAME="${{ secrets.ACR_NAME }}.azurecr.io/my-image"
          docker build -t $IMAGE_NAME:latest .
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ env.COMMIT_SHA }}
          
      - name: Push Docker Image to ACR
        run: |
          IMAGE_NAME="${{ secrets.ACR_NAME }}.azurecr.io/my-image"
          docker push $IMAGE_NAME:${{ env.COMMIT_SHA }}
     
      - name: Logout from ACR
        run: docker logout ${{ secrets.ACR_NAME }}.azurecr.io

  Deploy-to-AKS:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        run: |
          az login --service-principal \
            -u "${{ secrets.AZURE_CLIENT_ID }}" \
            -p "${{ secrets.AZURE_CLIENT_SECRET }}" \
            --tenant "${{ secrets.AZURE_TENANT_ID }}"

      - name: Set Azure Subscription
        run: az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: ACR Login
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Get Commit SHA
        id: get_commit_sha
        run: echo "COMMIT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Update Kubernetes Manifests with New Image Tags
        run: |
          for FILE in ${K8S_MANIFESTS_DIR}/*.yaml; do
            sed -i 's|\(image: testrepo3.azurecr.io/my-image\).*|\1:'"${{ env.COMMIT_SHA }}"'|g' "$FILE"
          done
          echo "âœ… The following Kubernetes manifests have been updated with COMMIT_SHA:"
          grep -H "image:" ${K8S_MANIFESTS_DIR}/*.yaml

          echo "ðŸš€ Applying updated manifests to AKS..."
          kubectl apply -f ${K8S_MANIFESTS_DIR}

      - name: Verify Deployment
        run: kubectl get pods -n argo

      - name: Set up Git credentials
        run: |
          git config --global user.name "ahmadqayyum7"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://$MY_GITHUB_TOKEN@github.com/ahmadqayyum7/argo-cd.git
        env:
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      - name: Test Authentication with Curl
        run: |
          curl -u "ahmadqayyum7:$MY_GITHUB_TOKEN" https://api.github.com/user 
        env:
          ARGO_CD_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: Push Changes to argo-cd Repository
        run: |
          git fetch origin
          git checkout main
          cp -r ${K8S_MANIFESTS_DIR}/* .
          git add .
          git commit -m "Update Kubernetes manifests with new image tags"
          git push origin main
        env:
          ARGO_CD_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
